{"version":3,"sources":["components/Accordion.js","components/search.js","components/Dropdown.js","components/Convert.js","components/Translate.js","components/Link.js","components/Header.js","components/Route.js","App.js","index.js"],"names":["Accordion","items","useState","indexValue","setIndexValue","allObjects","map","iterator","index","dropDownChoice","Fragment","className","onClick","onTitleClick","title","content","Search","term","setTerm","results","setResults","useEffect","search","a","axios","get","params","action","list","origin","format","srsearch","apiResponse","data","query","length","timeoutid","setTimeout","clearTimeout","titleAndSummaryFromApi","href","pageid","dangerouslySetInnerHTML","__html","snippet","value","onChange","e","target","Dropdown","label","options","selected","onsetSelectedchange","open","setOpen","ref","useRef","onBodyClick","event","current","contains","document","body","addEventListener","capture","removeEventListener","renderingOption","Convert","language","text","translated","setTranslated","debouncedText","setDebouncedText","timerId","post","q","key","translations","translatedText","doTranslation","Translate","setLanguage","setText","Link","children","metaKey","ctrlKey","preventDefault","window","history","pushState","navEvent","PopStateEvent","dispatchEvent","Header","Route","path","location","pathname","currentpath","setCurrentPath","onLocationChange","option","App","setSelected","ReactDom","render","querySelector"],"mappings":"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","file":"static/js/main.19ec19ac.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n//functional based component\r\nconst Accordion = ({items})=> {\r\nconst [indexValue,setIndexValue]=useState(null);\r\n  //helper function\r\n    const onTitleClick = (index) => {\r\n        setIndexValue(index);\r\n    }\r\n//**************treating arrays with objects as data************* \r\n    const allObjects = items.map( (iterator,index)=>{\r\n\r\n//for dropdown functionality\r\n        const dropDownChoice = indexValue === index ? 'active':'';\r\n        \r\n        return (\r\n        <React.Fragment key={iterator.title}>\r\n        <div className={\"title\"+ dropDownChoice} onClick={()=> onTitleClick(index)}>\r\n        <i className=\"dropdown icon\"> </i>\r\n        {iterator.title}\r\n        </div>\r\n        {/* compare syntax of line 19 & line 14 */}\r\n<div className={\"content\" + dropDownChoice}>\r\n<p>{iterator.content}</p>    \r\n</div>\r\n</React.Fragment>\r\n        );\r\n    \r\n});\r\n\r\nreturn <div className='ui styled accordion'> {allObjects} </div>\r\n};\r\nexport default Accordion;","import React,{useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Search = () => {\r\n// this is set state hook (6,7)\r\nconst [term,setTerm]=useState ('programming');\r\nconst [results,setResults]=useState ([]);\r\n\r\n// use effect has two components first one is function and seconde one is a arraay\r\nuseEffect ( () => {   // first argument\r\n     // apirResponse is a self defined func for for handling axios inside async\r\n        //NOTE:check syntax\r\n    const search= async () => {\r\n        const apiResponse = await axios.get ('https://en.wikipedia.org/w/api.php',{   \r\n            params: {// this is includeing parameters in the body of request  \r\n                action: 'query',\r\n                list: 'search',\r\n                origin: '*',\r\n                format: 'json',\r\n                srsearch: term,\r\n                },\r\n    });\r\n    //  at this point axios,get has has brought the api response\r\n    setResults(apiResponse.data.query.search);// now results will have array of all searche results\r\n    };\r\n\r\n   \r\nif(term && !results.length){\r\n    search();\r\n}else{\r\nconst timeoutid=setTimeout(()=>{// to limit making api req.\r\n    // sarch only one term\r\n        if(term){\r\n            search();\r\n        }\r\n    },500);\r\n    return()=>{\r\n        //cleartimeout and settimeout are in built in javascript\r\n        clearTimeout(timeoutid);\r\n    }\r\n}\r\n //NOTE: the return stat. will be active every time comp. re-render, \r\n//  though its loads up in first rendering of cpmonent\r\n},[term]);\r\n\r\nconst titleAndSummaryFromApi = results.map( (iterator)=>{\r\n    return(\r\n        <div key={iterator.pageid} className=\"item\">\r\n            \r\n            <div className=\"right floated content\">\r\n                <a href={`https://en.wikepedia.org?curid=${iterator.pageid}`}\r\n                 className=\"ui button\"\r\n                 > \r\n                 Go\r\n                 </a>\r\n            </div>\r\n\r\n            <div className=\"content\">\r\n                <div className=\"header\">{iterator.title}</div>\r\n        <span dangerouslySetInnerHTML={{__html:iterator.snippet}}></span> {/* this is to prevent XSS attack */}\r\n            </div>\r\n\r\n  </div>\r\n    );\r\n    \r\n});\r\n\r\nreturn (\r\n<div>\r\n    <div className=\"ui form\">\r\n        <div className=\"field\">\r\n            <label>Enter Search Term</label>\r\n            <input \r\n            value={term} \r\n            className=\"input\"\r\n             onChange={ e => setTerm(e.target.value)}\r\n             /> {/*handling input via use effect not state */}\r\n        </div>\r\n    </div>\r\n    <div className=\"ui celled list\">{titleAndSummaryFromApi}</div>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default Search;","import React,{useState,useEffect,useRef} from 'react';\r\nconst Dropdown = ({label,options,selected,onsetSelectedchange}) => {\r\n    // for toggling attribute code\r\n    // setOpen will change when user clicks the dropdown menu\r\n    const [open,setOpen]=useState(false);\r\n\r\n    const ref=useRef(); {/*ref used here*/}\r\n\r\n    //adding manual event listners\r\n   \r\n\r\n    useEffect ( ()=>{\r\n// onBodyClick func work is to add event listner to all DOM emeents\r\n\r\n        const onBodyClick = (event)=>{\r\n            if(ref.current.contains(event.target)){\r\n                return;\r\n            }\r\n            setOpen(false);\r\n        };\r\n\r\n document.body.addEventListener('click',onBodyClick,{capture:true});\r\n\r\n        return () => { //NOTE:this will work when this component is deleted\r\ndocument.body.removeEventListener('click',onBodyClick,{capture:true,});\r\n};\r\n},\r\n// emty array denotes rendering once i.e.\r\n//  when component rendered first time\r\n[]);\r\n\r\n    const renderingOption = options.map ( (iterator)=>{\r\n    if (iterator.value === selected.value) {\r\nreturn null;\r\n    }\r\nelse\r\n    return (\r\n        // event handler  on Click\r\n    <div \r\n    onClick={()=>onsetSelectedchange(iterator)} \r\n    key={iterator.value} \r\n    className=\"item\">\r\n        {iterator.label}\r\n    </div>\r\n        );   \r\n    });\r\n// main returning block\r\nreturn (\r\n<div ref={ref} className=\"ui form\">  {/*ref used here*/}\r\n    <div className=\"field\">\r\n    <label className=\"label\">{label}</label>\r\n    \r\n    {/* toggling attributes , !open means opposite of open */}\r\n    <div onClick={ ()=>setOpen(!open)} \r\n    className={`ui selection dropdown ${open ? 'visible active' : ' '}`}\r\n    > \r\n    <i className=\"dropdown icon\"></i>\r\n    <div className=\"text\">{selected.label}</div>\r\n    <div className={`menu ${open ? 'visible transition':' '}`}> \r\n    { renderingOption}\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n);\r\n};\r\nexport default Dropdown;","import React, {useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nconst Convert = ({language,text}) =>{\r\nconst [translated,setTranslated]=useState('');\r\nconst [debouncedText,setDebouncedText]=useState('text');\r\n        //******** using two use effect\r\nuseEffect(()=>{ //RELATE WITH LIFECYCE METHODS OR CALLED WHEN CERTAIN TASK HAPPEN EHCH IS DIFFERENT FROM EVENT HANDLING \r\n    \r\n    // after 500ms set debouncedText to the text which user had inputed\r\n    const timerId= setTimeout(()=>{\r\nsetDebouncedText(text);\r\n    },500);\r\n\r\n // if user inputs before 500ms text will be changed causing rerendering and \r\n//  thus return on useeffect is envoked thus can cancell timer here   \r\nreturn () => {\r\n    clearTimeout(timerId);\r\n}\r\n},[text]);\r\n//NEED TO MAKE API REQ. EVERY time text or language is changed hence \r\n// useEffect in use\r\nuseEffect( ()=>{\r\n    const doTranslation = async () => {\r\n        const {data}=await axios.post('https://translation.googleapis.com/language/translate/v2',\r\n        {},// since this api dosent allow making request inside body \r\n        // but through querry string parameters hence a third argument \r\n        {\r\n            params : {\r\n                q:debouncedText,//***making req using debounced text****\r\n                target:language.value,\r\n                key:\"AIzaSyCHUCmpR7cT_yDFHC98CZJy2LTms-IwDlM\"\r\n            }\r\n        })\r\n    setTranslated(data.data.translations[0].translatedText);\r\n    }\r\ndoTranslation();// calling this function\r\n},[language,debouncedText]);// MAKE API REQ. EVERY time text or language is changed\r\nreturn (\r\n<div >\r\n<h1 className='ui header'>{translated}</h1>\r\n</div>);\r\n};\r\nexport default Convert;\r\n","import React,{useState} from 'react';\r\nimport DropDown from './Dropdown';\r\nimport Convert from './Convert';\r\n\r\n const options =[\r\n     {\r\n         label:'Africaans',\r\n         value:'af'\r\n     },\r\n     {\r\n        label:'Arabic',\r\n        value:'ar'\r\n    },\r\n    {\r\n        label:'Hindi',\r\n        value:'hi'\r\n    }\r\n ];\r\n const Translate = () =>{\r\n const [language,setLanguage]= useState(options[0]); //sate to maintain current selected language\r\n const [text,setText]= useState(' '); // state for maintaining input \r\n return (\r\n         <div>\r\n             <div className='ui form'>\r\n                 <div className='field'>\r\n                     <label>Enter text </label>\r\n                 <input value={text} onChange={(e)=>{setText(e.target.value)}} />\r\n                 </div>\r\n             </div>\r\n            {/* using Dropdown component again */}\r\n             <DropDown \r\n             label=\"Select Language\"\r\n             selected={language} \r\n             onsetSelectedchange={setLanguage}\r\n              options={options} />\r\n         <hr /> {/*horizontal space to create seperation  */}\r\n<h3 className='ui header'>Output</h3>\r\n       <Convert language={language} text={text} />\r\n         </div>\r\n     );\r\n\r\n };\r\n export default Translate;\r\n","import React from 'react';\r\n \r\nconst Link = ({href,className,children}) => {\r\n\r\n     const addOnFunction = (event) => {\r\n\r\n          // open link in new tab **learn**\r\n     if(event.metaKey || event.ctrlKey){\r\n          return;\r\n     }\r\n\r\n     event.preventDefault();// wil prevent loading all resources when url is clicked\r\nwindow.history.pushState({},'',href);// this will prevent reload of page resources also the page url will change \r\n\r\n//this peice of code will cause the routes to know that URL is changed     \r\nconst navEvent = new PopStateEvent('popstate');\r\nwindow.dispatchEvent(navEvent);\r\n};\r\n\r\nreturn(\r\n<div>\r\n    <a onClick={ addOnFunction } className={className} href={href}>{children} </a>\r\n</div>\r\n);\r\n }\r\n export default Link;","import React from \"react\";\r\nimport Link from './Link';\r\nconst Header = ()=> {\r\nreturn (\r\n    <div className=\"ui secondary pointing menu\">\r\n{/* here the way link is used is an example of jsx inside jsx where\r\n acordin will be refeered as children */}\r\n        <Link href='/' className=\"item\">\r\n            Accordion\r\n        </Link>\r\n        <Link href='/list' className=\"item\">\r\n            Search\r\n        </Link>\r\n        <Link href='/dropdown' className=\"item\">\r\n            Dropdown\r\n        </Link>\r\n        <Link href='/translate' className=\"item\">\r\n            Translate\r\n        </Link>\r\n\r\n    </div>\r\n);\r\n}\r\nexport default Header;","import { useEffect,useState } from \"react\";\r\nconst Route = ({path,children}) => {\r\n// this state is just for rerendering the page when the URL changed\r\n    const[currentpath,setCurrentPath]=useState(window.location.pathname);\r\n\r\n// to listen the pop state event popped from linked comp. on URL change\r\nuseEffect( ()=>{\r\nconst onLocationChange=()=>{\r\n    setCurrentPath(window.location.pathname) // eg: '/list'\r\n};\r\nwindow.addEventListener('popstate',onLocationChange);\r\n\r\n// use effect return a function \r\n// need: if we need to remove this component this will come to use\r\nreturn () => {\r\nwindow.removeEventListener('popstate',onLocationChange);\r\n}\r\n     },[]);\r\n\r\n    if(currentpath === path){\r\n        return <div> {children}</ div>;\r\n    }\r\n    else \r\n    return null;\r\n}\r\nexport default Route;","import React,{useState} from 'react';\r\nimport Accordion from  './components/Accordion';\r\nimport Search from './components/search';\r\nimport Dropdown from './components/Dropdown';\r\nimport Translate from './components/Translate';\r\nimport Header from './components/Header';\r\nimport Route from './components/Route';\r\nconst items = [\r\n    {\r\n        title:'What is react ?',\r\n        content:'react is a front end javascript framework',\r\n    },\r\n    {\r\n        title:'Why use react?',\r\n        content :'React is a favourite JS library among engineers',\r\n    },\r\n    {\r\n        title:'How do you use react?',\r\n        content:'You use react by creating component',\r\n    },\r\n];\r\nconst option =[ // array of objects, will be passed as props allowing\r\n                //  reusability of Dropdown with different set of options \r\n    {\r\n        label:'The Color Red',\r\n        value:'red'\r\n    },\r\n    {\r\n        label:'The Color Green',\r\n        value:'green'\r\n    },\r\n    {\r\n        label:'The Shade Blue',\r\n        value:'blue'\r\n    }\r\n];\r\n\r\nconst App = ()=> {\r\n       // using state to know what option is currently selcted\r\n         const [selected,setSelected] = useState(option[0]);\r\n        return (\r\n            <div>\r\n                <Header />\r\n\r\n<Route path=\"/\">\r\n < Accordion items={items} />\r\n </Route>\r\n \r\n <Route path=\"/list\">\r\n < Search />\r\n </Route>\r\n\r\n <Route path=\"/dropdown\">\r\n  <Dropdown\r\n  label=\"Select a color\"\r\n  options={option}\r\n  selected={selected}\r\n  onsetSelectedchange={setSelected}\r\n/>\r\n </Route>\r\n\r\n <Route path=\"/translate\">\r\n < Translate />\r\n </Route>\r\n\r\n            </div>\r\n );\r\n  \r\n}\r\nexport default App;\r\n\r\n\r\n\r\n// //*********************important*******************\r\n// {/* //  const [showDropDown,setShowDropDown] = useState(true);  */}\r\n// {/* //             {/* <button onClick={()=>{setShowDropDown(!showDropDown)}}> */}\r\n// {/* //                 Toggle drop down */}\r\n// {/* //                 </button> */} */}\r\n\r\n// {/*//  using terniary operation */}           \r\n//                     {/* { showDropDown ? <Dropdown\r\n// //                     selected={selected}\r\n// //                     onsetSelectedchange={setSelected}// if user switches dropdown option\r\n// //                      options={option} /> : null\r\n// //                      }  */}","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDom.render(<App />,document.querySelector('#root'));\r\n"],"sourceRoot":""}